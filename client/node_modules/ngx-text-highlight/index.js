import { Directive, ElementRef, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var HighlightDirective = (function () {
    function HighlightDirective(el) {
        this.el = el;
        this.separatedText = [];
        this.separatedSearchedText = [];
        this.final = '';
        this.splitFlag = '';
        this.matchFlag = '';
        this.spanStart = '<span class="ngx-text-highlight">';
        this.spanEnd = '</span>';
        this.caseSensitive = false;
    }
    Object.defineProperty(HighlightDirective.prototype, "content", {
        get: /**
         * @return {?}
         */
        function () { return this._content; },
        set: /**
         * @param {?} content
         * @return {?}
         */
        function (content) {
            this._content = content;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HighlightDirective.prototype, "searchTerm", {
        get: /**
         * @return {?}
         */
        function () { return this._searchTerm; },
        set: /**
         * @param {?} searchTerm
         * @return {?}
         */
        function (searchTerm) {
            this._searchTerm = searchTerm;
            this.highlight();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    HighlightDirective.prototype.highlight = /**
     * @return {?}
     */
    function () {
        this.final = '';
        if (!this.caseSensitive) {
            this.splitFlag = 'i';
            this.matchFlag = 'gi';
        }
        else {
            this.splitFlag = '';
            this.matchFlag = 'g';
        }
        this.searchPattern = new RegExp(this._searchTerm, this.splitFlag);
        this.matchpattern = new RegExp(this._searchTerm, this.matchFlag);
        if (this._searchTerm !== undefined && this._searchTerm != null && this._searchTerm.length > 0 && this._searchTerm[0] !== '.') {
            this.separatedText = this._content.split(this.searchPattern);
            this.separatedSearchedText = this._content.match(this.matchpattern);
            if (this.separatedSearchedText != null && this.separatedSearchedText.length > 0) {
                for (var /** @type {?} */ i = 0; i < this.separatedText.length; i++) {
                    if (i <= this.separatedSearchedText.length - 1) {
                        this.final += this.separatedText[i] + this.spanStart + this.separatedSearchedText[i] + this.spanEnd;
                    }
                    else {
                        this.final += this.separatedText[i];
                    }
                }
            }
            if (this.final.length > 0) {
                this.el.nativeElement.innerHTML = this.final;
            }
            else {
                this.el.nativeElement.innerText = this._content;
            }
        }
        else {
            this.el.nativeElement.innerText = this._content;
        }
    };
    HighlightDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ngxTextHighlight]'
                },] },
    ];
    /** @nocollapse */
    HighlightDirective.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    HighlightDirective.propDecorators = {
        "content": [{ type: Input, args: ['content',] },],
        "searchTerm": [{ type: Input, args: ['searchTerm',] },],
        "caseSensitive": [{ type: Input },],
    };
    return HighlightDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NgHighlightModule = (function () {
    function NgHighlightModule() {
    }
    /**
     * @return {?}
     */
    NgHighlightModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: NgHighlightModule
        };
    };
    NgHighlightModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [
                        HighlightDirective
                    ],
                    exports: [
                        HighlightDirective
                    ]
                },] },
    ];
    /** @nocollapse */
    NgHighlightModule.ctorParameters = function () { return []; };
    return NgHighlightModule;
}());

export { NgHighlightModule, HighlightDirective };
